"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[721],{2427:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>a,contentTitle:()=>r,default:()=>t,frontMatter:()=>h,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"type":"mdx","permalink":"/Janitor/changelog","source":"@site/pages/changelog.md","title":"Janitor Changelog","description":"All notable changes to this project will be documented in this file.","frontMatter":{},"unlisted":false}');var l=n(4848),s=n(8453);const h={},r="Janitor Changelog",a={},c=[{value:"[1.18.1] - 2025-03-10",id:"1181---2025-03-10",level:2},{value:"Changed",id:"changed",level:3},{value:"[1.18.0] - 2025-03-09",id:"1180---2025-03-09",level:2},{value:"Added",id:"added",level:3},{value:"Changed",id:"changed-1",level:3},{value:"[1.17.0] - 2024-08-12",id:"1170---2024-08-12",level:2},{value:"Added",id:"added-1",level:3},{value:"Changed",id:"changed-2",level:3},{value:"Fixed",id:"fixed",level:3},{value:"[1.16.0] - 2024-05-01",id:"1160---2024-05-01",level:2},{value:"Added",id:"added-2",level:3},{value:"Changed",id:"changed-3",level:3},{value:"[1.15.7] - 2023-12-27",id:"1157---2023-12-27",level:2},{value:"Added",id:"added-3",level:3},{value:"Changed",id:"changed-4",level:3},{value:"[1.15.6] - 2023-08-09",id:"1156---2023-08-09",level:2},{value:"Added",id:"added-4",level:3},{value:"Changed",id:"changed-5",level:3},{value:"Fixed",id:"fixed-1",level:3},{value:"Removed",id:"removed",level:3},{value:"[1.15.5] - 2023-07-28",id:"1155---2023-07-28",level:2},{value:"Changed",id:"changed-6",level:3},{value:"[1.15.4] - 2023-07-20",id:"1154---2023-07-20",level:2},{value:"Added",id:"added-5",level:3},{value:"Fixed",id:"fixed-2",level:3},{value:"[1.15.3] - 2023-07-01",id:"1153---2023-07-01",level:2},{value:"Changed",id:"changed-7",level:3},{value:"[1.15.2] - 2023-04-11",id:"1152---2023-04-11",level:2},{value:"Changed",id:"changed-8",level:3},{value:"[1.15.1] - 2022-11-30",id:"1151---2022-11-30",level:2},{value:"Added",id:"added-6",level:3},{value:"Fixed",id:"fixed-3",level:3},{value:"Removed",id:"removed-1",level:3},{value:"[1.15.0] - 2022-11-30",id:"1150---2022-11-30",level:2},{value:"Added",id:"added-7",level:3},{value:"Fixed",id:"fixed-4",level:3},{value:"[1.14.2] - 2022-11-09",id:"1142---2022-11-09",level:2},{value:"Added",id:"added-8",level:3},{value:"Fixed",id:"fixed-5",level:3},{value:"1.14.1 - 2022-03-17",id:"1141---2022-03-17",level:2},{value:"Added",id:"added-9",level:3},{value:"Changed",id:"changed-9",level:3},{value:"Fixed",id:"fixed-6",level:3},{value:"1.14 - 2022-03-12",id:"114---2022-03-12",level:2},{value:"Added",id:"added-10",level:3},{value:"Changed",id:"changed-10",level:3},{value:"1.13.15 - 2021-11-24",id:"11315---2021-11-24",level:2},{value:"Changed",id:"changed-11",level:3},{value:"1.13.14 - 2021-11-05",id:"11314---2021-11-05",level:2},{value:"Fixed",id:"fixed-7",level:3},{value:"1.13.13 - 2021-10-20",id:"11313---2021-10-20",level:2},{value:"Changed",id:"changed-12",level:3},{value:"Fixed",id:"fixed-8",level:3},{value:"1.13.12 - 2021-10-02",id:"11312---2021-10-02",level:2},{value:"Added",id:"added-11",level:3},{value:"Changed",id:"changed-13",level:3},{value:"Fixed",id:"fixed-9",level:3},{value:"1.13.11 -",id:"11311--",level:2},{value:"1.13.10 - 2021-09-29",id:"11310---2021-09-29",level:2},{value:"Added",id:"added-12",level:3},{value:"1.13.9 - 2021-09-18",id:"1139---2021-09-18",level:2},{value:"Added",id:"added-13",level:3},{value:"Changed",id:"changed-14",level:3},{value:"1.13.7 - 2021-09-16",id:"1137---2021-09-16",level:2},{value:"Changed",id:"changed-15",level:3},{value:"Removed",id:"removed-2",level:3},{value:"1.13.6 - 2021-08-21",id:"1136---2021-08-21",level:2},{value:"Added",id:"added-14",level:3},{value:"1.13.4 - 2021-05-27",id:"1134---2021-05-27",level:2},{value:"Fixed",id:"fixed-10",level:3},{value:"1.0.0 -",id:"100--",level:2}];function o(e){const d={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(d.header,{children:(0,l.jsx)(d.h1,{id:"janitor-changelog",children:"Janitor Changelog"})}),"\n",(0,l.jsx)(d.p,{children:"All notable changes to this project will be documented in this file."}),"\n",(0,l.jsxs)(d.p,{children:["The format is based on ",(0,l.jsx)(d.a,{href:"https://keepachangelog.com/en/1.0.0/",children:"Keep a Changelog"}),",\nand this project adheres to ",(0,l.jsx)(d.a,{href:"https://semver.org/spec/v2.0.0.html",children:"Semantic Versioning"}),"."]}),"\n",(0,l.jsx)(d.h2,{id:"1181---2025-03-10",children:"[1.18.1] - 2025-03-10"}),"\n",(0,l.jsx)(d.h3,{id:"changed",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Cleaning up should be faster. Compared to Duster with the UltraJanitor modification, it is within 3%."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1180---2025-03-09",children:"[1.18.0] - 2025-03-09"}),"\n",(0,l.jsx)(d.h3,{id:"added",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added unique index support to ",(0,l.jsx)(d.code,{children:"Janitor:AddPromise"}),"."]}),"\n",(0,l.jsx)(d.li,{children:"Literally doubled performance. This is not a joke, it is twice as fast and is also the fastest on every CPU architecture."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-1",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Changed how ",(0,l.jsx)(d.code,{children:"Janitor:Cleanup"}),"'s loop is handled. We are not using the ",(0,l.jsx)(d.code,{children:"GetFenv"})," function anymore."]}),"\n",(0,l.jsxs)(d.li,{children:["Changed the ",(0,l.jsx)(d.code,{children:"Janitors"})," weak metatable slightly."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1170---2024-08-12",children:"[1.17.0] - 2024-08-12"}),"\n",(0,l.jsx)(d.h3,{id:"added-1",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Removed old TestEZ unit testing in favor of Jest."}),"\n",(0,l.jsx)(d.li,{children:"Added Lune scripts for building."}),"\n",(0,l.jsx)(d.li,{children:"Improved the documentation."}),"\n",(0,l.jsx)(d.li,{children:"Fixed doc comments being way too long."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-2",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Rewrote the API to be correct for Luau LSP strict mode and Roblox strict mode."}),"\n",(0,l.jsxs)(d.li,{children:["Changed the ",(0,l.jsx)(d.code,{children:"Janitor.AddPromise"})," API to be a better typed version."]}),"\n",(0,l.jsx)(d.li,{children:"Rewrote the code to be a little bit more readable."}),"\n",(0,l.jsx)(d.li,{children:"Optimized the code with funny micro optimizations."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Fixed suspicious thread cleanup."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1160---2024-05-01",children:"[1.16.0] - 2024-05-01"}),"\n",(0,l.jsx)(d.h3,{id:"added-2",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:"Janitor.AddObject"})," for constructing an object."]}),"\n",(0,l.jsxs)(d.li,{children:["Made the type for Janitor more accurate (you can now actually do ",(0,l.jsx)(d.code,{children:"__call"})," without it whining!)"]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-3",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Changed some minor syntax things."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1157---2023-12-27",children:"[1.15.7] - 2023-12-27"}),"\n",(0,l.jsx)(d.h3,{id:"added-3",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:"Janitor.instanceof"})," for rbxts usage."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-4",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Made the Promise dependency \"optional\". It's still required in the Wally file, but it's not actually required if it can't detect it."}),"\n",(0,l.jsx)(d.li,{children:"Updated the dependencies in the aftman file."}),"\n",(0,l.jsx)(d.li,{children:"Changed one of the tests to use itSKIP."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1156---2023-08-09",children:"[1.15.6] - 2023-08-09"}),"\n",(0,l.jsx)(d.h3,{id:"added-4",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added a small safeguard in ",(0,l.jsx)(d.code,{children:"Janitor:LinkToInstances()"})," that prevents non-Instances."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-5",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["The Promise dependency has been bumped to ",(0,l.jsx)(d.code,{children:"4.0.0-rc.2"}),"."]}),"\n",(0,l.jsx)(d.li,{children:"Changed how the formatting of Janitor is (120 character lines)."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-1",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Fixed an error that would only happen if you set SuppressInstanceReDestroy (tries to clean it up). Thanks Meta-Maxim!"}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"removed",children:"Removed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:['"Removed" ',(0,l.jsx)(d.code,{children:"LegacyLinkToInstance"}),". This reduces the overall size of the package. The function itself still technically exists,\njust as a pointer to ",(0,l.jsx)(d.code,{children:"LinkToInstance"}),", but it is not exported with the class type."]}),"\n",(0,l.jsx)(d.li,{children:"Removed the Symbol ModuleScript. We're gonna use a metatable'd table instead from now on. This also reduces the size of the package."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1155---2023-07-28",children:"[1.15.5] - 2023-07-28"}),"\n",(0,l.jsx)(d.h3,{id:"changed-6",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Promise is now a required dependency. This prevents a bug with ",(0,l.jsx)(d.code,{children:"AddPromise"})," not detecting a Promise library if it is not\ncalled exactly ",(0,l.jsx)(d.code,{children:"Promise"}),". Thanks colbert2677!"]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1154---2023-07-20",children:"[1.15.4] - 2023-07-20"}),"\n",(0,l.jsx)(d.h3,{id:"added-5",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Added a toggle to avoid double destruction of instances. Thanks Meta-Maxim!"}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-2",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Fixed an error being thrown when an ended thread is cleaned up. (#31) Thanks brinkokevin!"}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1153---2023-07-01",children:"[1.15.3] - 2023-07-01"}),"\n",(0,l.jsx)(d.h3,{id:"changed-7",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Changed how threads are cleaned up internally."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1152---2023-04-11",children:"[1.15.2] - 2023-04-11"}),"\n",(0,l.jsx)(d.h3,{id:"changed-8",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:[(0,l.jsx)(d.code,{children:"Janitor.new"})," actually returns the typed Janitor class."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1151---2022-11-30",children:"[1.15.1] - 2022-11-30"}),"\n",(0,l.jsx)(d.h3,{id:"added-6",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:"Janitor:GetAll"})," as requested by AlreadyPro."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-3",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Fixed incorrect type in the Janitor exported type."}),"\n",(0,l.jsxs)(d.li,{children:["Fixed out of date documentation in ",(0,l.jsx)(d.code,{children:"Installation.md"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"removed-1",children:"Removed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Removed the old toml files for Selene."}),"\n",(0,l.jsxs)(d.li,{children:["Removed ",(0,l.jsx)(d.code,{children:"foreman.toml"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1150---2022-11-30",children:"[1.15.0] - 2022-11-30"}),"\n",(0,l.jsx)(d.h3,{id:"added-7",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:"Janitor:RemoveNoClean"})," and ",(0,l.jsx)(d.code,{children:"Janitor:RemoveListNoClean"}),", which allows removal without cleaning."]}),"\n",(0,l.jsxs)(d.li,{children:["Added a nicer type return for Janitor. No more ",(0,l.jsx)(d.code,{children:"typeof(Janitor.new())"}),"!"]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-4",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Fixed serious issue where ",(0,l.jsx)(d.code,{children:"Janitor:RemoveList"})," would not actually remove anything from the indices reference."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1142---2022-11-09",children:"[1.14.2] - 2022-11-09"}),"\n",(0,l.jsx)(d.h3,{id:"added-8",children:"Added"}),"\n",(0,l.jsx)(d.h3,{id:"fixed-5",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Fixed Janitor error when attempting call task.cancel on a running thread"}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1141---2022-03-17",children:"1.14.1 - 2022-03-17"}),"\n",(0,l.jsx)(d.h3,{id:"added-9",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added a new ",(0,l.jsx)(d.code,{children:"LinkToInstance"})," method which will instead use ",(0,l.jsx)(d.code,{children:"Instance.Destroying"}),"."]}),"\n",(0,l.jsxs)(d.li,{children:["Added traceback to ",(0,l.jsx)(d.code,{children:"Janitor:AddPromise"})," for invalid promises."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-9",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["The legacy ",(0,l.jsx)(d.code,{children:"LinkToInstance"})," method has been renamed to ",(0,l.jsx)(d.code,{children:"LegacyLinkToInstance"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-6",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Fixed Janitor not warning about an invalid ",(0,l.jsx)(d.code,{children:"MethodName"})," for threads and functions."]}),"\n",(0,l.jsxs)(d.li,{children:["Fixed incorrect documentation about ",(0,l.jsx)(d.code,{children:"Janitor.CurrentlyCleaning"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"114---2022-03-12",children:"1.14 - 2022-03-12"}),"\n",(0,l.jsx)(d.h3,{id:"added-10",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["You can now add a ",(0,l.jsx)(d.code,{children:"thread"})," using ",(0,l.jsx)(d.code,{children:":Add"}),". This will cancel said thread when the Janitor is cleaned up."]}),"\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:"__tostring"})," to the Janitor class."]}),"\n",(0,l.jsxs)(d.li,{children:["Added ",(0,l.jsx)(d.code,{children:":RemoveList"})," as an alternative to long ",(0,l.jsx)(d.code,{children:":Remove"})," chains."]}),"\n",(0,l.jsxs)(d.li,{children:["Added the properties of ",(0,l.jsx)(d.code,{children:"Janitor"})," and ",(0,l.jsx)(d.code,{children:"RbxScriptConnection"})," to the documentation."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-10",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Recompiled with L+ C Edition."}),"\n",(0,l.jsxs)(d.li,{children:["Put ",(0,l.jsx)(d.code,{children:"RbxScriptConnection"})," in a separate file."]}),"\n",(0,l.jsx)(d.li,{children:"Documentation now will split the code examples by language more obviously."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11315---2021-11-24",children:"1.13.15 - 2021-11-24"}),"\n",(0,l.jsx)(d.h3,{id:"changed-11",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:[(0,l.jsx)(d.code,{children:"Janitor:Cleanup"})," now uses a while loop instead of a for loop when cleaning up. Fixed by @codesenseAye."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11314---2021-11-05",children:"1.13.14 - 2021-11-05"}),"\n",(0,l.jsx)(d.h3,{id:"fixed-7",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:[(0,l.jsx)(d.code,{children:"Janitor:AddPromise"})," now will handle cancellations properly."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11313---2021-10-20",children:"1.13.13 - 2021-10-20"}),"\n",(0,l.jsx)(d.h3,{id:"changed-12",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Finding Promise is now more aware for plugins. This way it won't load a Promise library inside of ReplicatedStorage."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-8",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["APIs that return Janitor like ",(0,l.jsx)(d.code,{children:"Janitor::Remove"})," no longer explicitly state the return type. This seems to cause problems with typed Luau."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11312---2021-10-02",children:"1.13.12 - 2021-10-02"}),"\n",(0,l.jsx)(d.h3,{id:"added-11",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["A brand new ",(0,l.jsx)(d.a,{href:"https://howmanysmall.github.io/Janitor/api/Janitor/",children:"documentation site"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-13",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Janitor's ",(0,l.jsx)(d.code,{children:"__index"})," no longer points to a separate table."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"fixed-9",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Urgent fix for the cleanup loop. I had forgotten the ",(0,l.jsx)(d.code,{children:"continue"})," so it would've likely broken."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11311--",children:"1.13.11 -"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"This version has been scrubbed from GitHub releases for a reason."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"11310---2021-09-29",children:"1.13.10 - 2021-09-29"}),"\n",(0,l.jsx)(d.h3,{id:"added-12",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Added support for Promise existing in the ",(0,l.jsx)(d.code,{children:"Server*"})," services."]}),"\n",(0,l.jsx)(d.li,{children:"Documentation comments have been overhauled."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1139---2021-09-18",children:"1.13.9 - 2021-09-18"}),"\n",(0,l.jsx)(d.h3,{id:"added-13",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"A singular version of Janitor is now the only version. This still supports Promises, it just searches for the Promise library."}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"changed-14",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"The file tree for Janitor has been standardized."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1137---2021-09-16",children:"1.13.7 - 2021-09-16"}),"\n",(0,l.jsx)(d.h3,{id:"changed-15",children:"Changed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["The cleanup loop now uses ",(0,l.jsx)(d.code,{children:"in pairs"})," instead of ",(0,l.jsx)(d.code,{children:"in next"}),"."]}),"\n"]}),"\n",(0,l.jsx)(d.h3,{id:"removed-2",children:"Removed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["The ",(0,l.jsx)(d.code,{children:"task.spawn"})," cleanups are now removed."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1136---2021-08-21",children:"1.13.6 - 2021-08-21"}),"\n",(0,l.jsx)(d.h3,{id:"added-14",children:"Added"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:["Janitor now cleans up the tasks using ",(0,l.jsx)(d.code,{children:"task.spawn"}),"."]}),"\n",(0,l.jsx)(d.li,{children:"Janitor now has types."}),"\n",(0,l.jsx)(d.li,{children:"Janitor will work far better with typed Luau as well."}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"1134---2021-05-27",children:"1.13.4 - 2021-05-27"}),"\n",(0,l.jsx)(d.h3,{id:"fixed-10",children:"Fixed"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsxs)(d.li,{children:[(0,l.jsx)(d.code,{children:"Janitor:LinkToInstance"})," now works on deferred event mode. Shoutout to @Elttob for fixing it."]}),"\n"]}),"\n",(0,l.jsx)(d.h2,{id:"100--",children:"1.0.0 -"}),"\n",(0,l.jsxs)(d.ul,{children:["\n",(0,l.jsx)(d.li,{children:"Initial release."}),"\n"]})]})}function t(e={}){const{wrapper:d}={...(0,s.R)(),...e.components};return d?(0,l.jsx)(d,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>h,x:()=>r});var i=n(6540);const l={},s=i.createContext(l);function h(e){const d=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function r(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:h(e.components),i.createElement(s.Provider,{value:d},e.children)}}}]);